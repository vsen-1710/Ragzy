services:
  weaviate:
    image: semitechnologies/weaviate:1.24.7
    ports:
      - "8081:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'text2vec-openai'
      ENABLE_MODULES: 'text2vec-openai'
      CLUSTER_HOSTNAME: 'node1'
    volumes:
      - weaviate_data:/var/lib/weaviate
    restart: unless-stopped   # ✅ added for better reliability

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    sysctls:
      - net.core.somaxconn=65535
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    environment:
      - REDIS_NODE_ID=node1
      - REDIS_CLUSTER_ENABLED=no  # Set to yes for cluster mode
      - REDIS_PERSISTENCE_ENABLED=yes

  # Redis Sentinel for high availability (optional)
  redis-sentinel:
    image: redis:7-alpine
    ports:
      - "26379:26379"
    volumes:
      - ./sentinel.conf:/usr/local/etc/redis/sentinel.conf
    command: redis-sentinel /usr/local/etc/redis/sentinel.conf
    depends_on:
      - redis
    restart: unless-stopped
    profiles:
      - ha  # Only start with docker-compose --profile ha up

  backend:
    build: .
    ports:
      - "5000:5000"
    environment:
      FLASK_ENV: development
      WEAVIATE_URL: http://weaviate:8080
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
    volumes:
      - ./app:/app/app
      - ./run.py:/app/run.py
      - ./client_secret.json:/app/client_secret.json
    env_file:
      - .env   # ✅ keep this, remove the .env mount below
    depends_on:
      - weaviate
      - redis
    restart: unless-stopped   # ✅ added for auto-restart on crash

volumes:
  weaviate_data:
  redis_data:
